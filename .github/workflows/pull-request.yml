name: push
on: push

jobs:
  cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'

  build:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache 
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - run: npm run build
        

  lint:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'  
      - run: npm lint

  docker-build:
    runs-on: ubuntu-latest
    needs: cypress-e2e
    steps:
      - uses: actions/checkout@v2.3.4 
      - run: "script"
        
  test:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - run: npm run test

  cypress-e2e:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - run: ./test_cypress.sh
  
  create-dump:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - run: "skript"
  
  db-migration:
    runs-on: ubuntu-latest
    needs: [ cypress-e2e, create-dump, test ]
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - run: npm run db:migrution:run 
 
  firebase-build:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - run: npm run build
      - name: Archive Artifact
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist/test-flow
    
  firebase-deploy:
     runs-on: ubuntu-latest
     needs: firebase-build
     steps:
      - uses: actions/checkout@v2.3.4
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: dist
          path: dist/test-flow
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: "default"
           
  update-cluster:
    runs-on: ubuntu-latest
    needs: db-migration
    steps:
      - uses: actions/checkout@v2.3.4
      - run: "script"   
