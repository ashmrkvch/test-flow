name: push
on: push

jobs:
  cache:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'

  build:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache 
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - run: npm run build
        

  lint:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'  
      - run: npm lint

  docker-build:
    runs-on: ubuntu-latest
    needs: cypress-e2e
    steps:
      - uses: actions/checkout@v2.3.4 
      - name: Get the version
        id: get_tag_name
      - uses: RafikFarhad/push-to-gcr-github-action@v3.0.2
        with:
          gcloud_service_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
          registry: gcr.io
          project_id: serious-flight-302114
          image_name: test-flow
          image_tag: $GITHUB_SHA
          dockerfile: ./Dockerfile  
        
  test:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - run: npm run lint

  cypress-e2e:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - run: npm run lint
  
  create-dump:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - run: echo "Dump created"
  
  db-migration:
    runs-on: ubuntu-latest
    needs: [ cypress-e2e, create-dump, test ]
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - run: npm run lint 
 
  firebase-build:
    runs-on: ubuntu-latest
    needs: cache
    steps:
      - uses: actions/checkout@v2.3.4
      - uses: actions/cache@v2.1.4
        id: cache
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
      - run: npm ci
        if: steps.cache-build.outputs.cache-hit != 'true'
      - run: npm run build
      - name: Archive Artifact
        uses: actions/upload-artifact@master
        with:
          name: dist
          path: dist/test-flow
    
  firebase-deploy:
     runs-on: ubuntu-latest
     needs: firebase-build
     steps:
      - uses: actions/checkout@v2.3.4
      - name: Download Artifact
        uses: actions/download-artifact@master
        with:
          name: dist
          path: dist/test-flow
      - name: Deploy to Firebase
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          PROJECT_ID: "default"
           
  update-cluster:
      runs-on: ubuntu-latest
      needs: [ db-migration, docker-build ]
      steps:
        - uses: actions/checkout@v2.3.4
          env:
            PROJECT_ID: ${{ secrets.GKE_PROJECT }}
            GKE_CLUSTER: test-flow
            GKE_ZONE: europe-north1-a
            DEPLOYMENT_NAME: test-flow
            IMAGE: test-flow
            NAME_SPASE: default
            DEPLOYMENT_NAME_CON: nginx-1
        - uses: google-github-actions/setup-gcloud@v0.2.0
          with:
            service_account_key: ${{ secrets.GCLOUD_SERVICE_KEY }}
            project_id: ${{ secrets.GKE_PROJECT }}
        - run: |-
            gcloud --quiet auth configure-docker
        - uses: google-github-actions/get-gke-credentials@v0.2.1
          with:
            cluster_name: ${{ env.GKE_CLUSTER }}
            location: ${{ env.GKE_ZONE }}
            credentials: ${{ secrets.GCLOUD_SERVICE_KEY }}
        - name: update
          run: |-
            kubectl set image deployment/$DEPLOYMENT_NAME DEPLOYMENT_NAME_CON=gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA --namespace=$NAME_SPASE
            kubectl rollout status deployment/$DEPLOYMENT_NAME --namespace=$NAME_SPASE
            kubectl get services -o wide --namespace=$NAME_SPASE
